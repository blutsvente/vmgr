// Sanity regression; automatically generated by script vmgr_sanity_vsif from main.vsif
session iris_mgp_regression {
   top_dir: $ENV(MY_REGRESSION_AREA)/fme_iris_mgp;
   drm: <text>lsf</text>;
   queuing_policy: round_robin;
   pre_session_script: $ENV(VMANAGER_CONFIG_HOME)/brun_build_ncsim.sh;
   max_runs_in_parallel: 16;
   post_session_drm: <text>lsf</text>;
   post_session_script: $ENV(VMANAGER_CONFIG_HOME)/brun_post_session.sh;
   session_description: <text>regression containing complete set of available testcases</text>;
};
group registers {
   test reg_irq {
      top_files: <text>fme_iris_mgp/tests/new_irq_test.e</text>;
   };
   test reg_reset {
      top_files: <text>fme_iris_mgp/tests/regs_reset.e</text>;
   };
   test mems_rw {
      top_files: <text>fme_iris_mgp/tests/mems_rw.e</text>;
   };
   test reg_mem_rw {
      top_files: <text>fme_iris_mgp/tests/regs_rw.e</text>;
   };
   test ahb_random {
      top_files: <text>fme_iris_mgp/tests/ahb_rw.e</text>;
   };
   dut_name: <text>iris_mgp</text>;
   run_script: $ENV(FME_IRIS_MGP_PACKAGE_DIR)/vm/brun_run_ncsim.sh;
   timeout: 4000;
   test_command: test;
   run_mode: batch;
   auto_scan_args: $ENV(VMANAGER_HOME)/bin/shell.flt $ENV(VMANAGER_HOME)/bin/specman.flt $ENV(VMANAGER_CONFIG_HOME)/iris.flt;
   seed: random;
   sv_seed: 1;
};
group display_controller0 {
   test disp0_static {
      top_files: <text>fme_iris_mgp/tests/disp0_static_test.e</text>;
   };
   test disp0_static_safety_test {
      top_files: <text>fme_iris_mgp/tests/disp0_static_safety_test.e</text>;
   };
   test disp0_static_tcon {
      top_files: <text>fme_iris_mgp/tests/disp0_static_tcon_test.e</text>;
   };
   test disp0_static_tcon_hvsync {
      top_files: <text>fme_iris_mgp/tests/disp0_static_tcon_hvsync_test.e</text>;
   };
   test disp0_static_loopback {
      top_files: <text>fme_iris_mgp/tests/disp0_static_loopback.e</text>;
   };
   test disp0_dynamic {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_test.e</text>;
   };
   test disp0_dynamic_safety {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_safety_test.e</text>;
   };
   test disp0_dynamic_rerun {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_rerun_test.e</text>;
   };
   test disp0_dynamic_auto {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_auto_test.e</text>;
   };
   test disp0_dynamic_warp {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_warp_test.e</text>;
   };
   test disp0_dynamic_sig {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_sig_test.e</text>;
   };
   test disp0_dynamic_histo {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_histo_test.e</text>;
   };
   test disp0_dynamic_decode {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_decode_test.e</text>;
   };
   test disp0_dynamic_dump {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_dump_test.e</text>;
   };
   test disp0_dynamic_dump_error {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_dump_error_test.e</text>;
   };
   test disp0_dynamic_capture {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_capture_test.e</text>;
   };
   test disp0_dynamic_capture_mipi {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_capture_mipi_test.e</text>;
   };
   test disp0_dynamic_auto_capture {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_auto_capture_test.e</text>;
   };
   test disp0_dynamic_low_perf {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_low_perf_test.e</text>;
   };
   test disp0_dynamic_clk_throttling_test {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_clk_throttling_test.e</text>;
   };
   test disp0_dynamic_bob {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_bob_deinterlace_test.e</text>;
   };
   test disp0_dynamic_ringbuffer {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_ringbuffer_test.e</text>;
   };
   test disp0_dual_dynamic {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_test.e</text>;
   };
   test disp0_dual_dynamic_safety_test {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_safety_test.e</text>;
   };
   test disp0_dual_dynamic_auto {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_auto_test.e</text>;
   };
   test disp0_dual_dynamic_ringbuffer_bob_down {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_ringbuffer_bob_down_test.e</text>;
   };
   test disp0_dual_dynamic_ringbuffer_enc {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_ringbuffer_enc_test.e</text>;
   };
   test disp0_dual_dynamic_frame_rate_conversion {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_dynamic_frame_rate_conversion.e</text>;
   };
   test disp0_dual_screen {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_screen_test.e</text>;
   };
   test disp0_dual_view {
      top_files: <text>fme_iris_mgp/tests/disp0_dual_view_test.e</text>;
   };
   dut_name: <text>iris_mgp</text>;
   run_script: $ENV(FME_IRIS_MGP_PACKAGE_DIR)/vm/brun_run_ncsim.sh;
   timeout: 4000;
   test_command: test;
   run_mode: batch;
   auto_scan_args: $ENV(VMANAGER_HOME)/bin/shell.flt $ENV(VMANAGER_HOME)/bin/specman.flt $ENV(VMANAGER_CONFIG_HOME)/iris.flt;
   seed: random;
   sv_seed: 1;
   count: 24;
};
group display_controller1 {
   test disp1_static {
      top_files: <text>fme_iris_mgp/tests/disp1_static_test.e</text>;
   };
   test disp1_static_safety_test {
      top_files: <text>fme_iris_mgp/tests/disp1_static_safety_test.e</text>;
   };
   test disp1_static_tcon {
      top_files: <text>fme_iris_mgp/tests/disp1_static_tcon_test.e</text>;
   };
   test disp1_static_tcon_hvsync {
      top_files: <text>fme_iris_mgp/tests/disp1_static_tcon_hvsync_test.e</text>;
   };
   test disp1_static_loopback {
      top_files: <text>fme_iris_mgp/tests/disp1_static_loopback.e</text>;
   };
   test disp1_dynamic {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_test.e</text>;
   };
   test disp1_dynamic_safety {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_safety_test.e</text>;
   };
   test disp1_dynamic_rerun {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_rerun_test.e</text>;
   };
   test disp1_dynamic_auto {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_auto_test.e</text>;
   };
   test disp1_dynamic_warp {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_warp_test.e</text>;
   };
   test disp1_dynamic_sig {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_sig_test.e</text>;
   };
   test disp1_dynamic_histo {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_histo_test.e</text>;
   };
   test disp1_dynamic_decode {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_decode_test.e</text>;
   };
   test disp1_dynamic_dump {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_dump_test.e</text>;
   };
   test disp1_dynamic_capture {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_capture_test.e</text>;
   };
   test disp1_dynamic_capture_mipi {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_capture_mipi_test.e</text>;
   };
   test disp1_dynamic_auto_capture {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_auto_capture_test.e</text>;
   };
   test disp1_dynamic_clk_throttling_test {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_clk_throttling_test.e</text>;
   };
   test disp1_dynamic_bob {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_bob_deinterlace_test.e</text>;
   };
   test disp1_dual_dynamic {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_dynamic_test.e</text>;
   };
   test disp1_dual_dynamic_safety_test {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_dynamic_safety_test.e</text>;
   };
   test disp1_dual_dynamic_auto {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_dynamic_auto_test.e</text>;
   };
   test disp1_dual_dynamic_ringbuffer_bob_down {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_dynamic_ringbuffer_bob_down_test.e</text>;
   };
   test disp1_dual_dynamic_ringbuffer_enc {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_dynamic_ringbuffer_enc_test.e</text>;
   };
   test disp1_dual_screen {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_screen_test.e</text>;
   };
   test disp1_dual_view {
      top_files: <text>fme_iris_mgp/tests/disp1_dual_view_test.e</text>;
   };
   dut_name: <text>iris_mgp</text>;
   run_script: $ENV(FME_IRIS_MGP_PACKAGE_DIR)/vm/brun_run_ncsim.sh;
   timeout: 4000;
   test_command: test;
   run_mode: batch;
   auto_scan_args: $ENV(VMANAGER_HOME)/bin/shell.flt $ENV(VMANAGER_HOME)/bin/specman.flt $ENV(VMANAGER_CONFIG_HOME)/iris.flt;
   seed: random;
   sv_seed: 1;
   count: 24;
};
group capture_controller0 {
   test storage0_test {
      top_files: <text>fme_iris_mgp/tests/storage0_test.e</text>;
   };
   test storage0_singleframe {
      top_files: <text>fme_iris_mgp/tests/storage0_singleframe_test.e</text>;
   };
   test storage0_singleframe_new {
      top_files: <text>fme_iris_mgp/tests/storage0_singleframe_new_test.e</text>;
   };
   test storage0_ringbuffer {
      top_files: <text>fme_iris_mgp/tests/storage0_ringbuffer_test.e</text>;
   };
   test storage0_encode_test {
      top_files: <text>fme_iris_mgp/tests/storage0_encode_test.e</text>;
   };
   test storage0_scale_test {
      top_files: <text>fme_iris_mgp/tests/storage0_scale_test.e</text>;
   };
   test storage0_scale_cov {
      top_files: <text>fme_iris_mgp/tests/storage0_scale_cov_test.e</text>;
   };
   test storage0_histo {
      top_files: <text>fme_iris_mgp/tests/storage0_histo_test.e</text>;
   };
   test storage0_min_frame {
      top_files: <text>fme_iris_mgp/tests/storage0_min_frame_test.e</text>;
   };
   test storage0_clk_throttling {
      top_files: <text>fme_iris_mgp/tests/storage0_clk_throttling_test.e</text>;
   };
   test storage0_error {
      top_files: <text>fme_iris_mgp/tests/storage0_error_test.e</text>;
   };
   test storage0_error2 {
      top_files: <text>fme_iris_mgp/tests/storage0_error2_test.e</text>;
   };
   test storage0_weave {
      top_files: <text>fme_iris_mgp/tests/storage0_weave_test.e</text>;
   };
   test storage0_mipi {
      top_files: <text>fme_iris_mgp/tests/storage0_mipi_test.e</text>;
   };
   test storage0_copy {
      top_files: <text>fme_iris_mgp/tests/storage0_copy_test.e</text>;
   };
   test disp0_direct_capture_test {
      top_files: <text>fme_iris_mgp/tests/disp0_direct_capture_test.e</text>;
   };
   test disp1_direct_capture_test {
      top_files: <text>fme_iris_mgp/tests/disp1_direct_capture_test.e</text>;
   };
   dut_name: <text>iris_mgp</text>;
   run_script: $ENV(FME_IRIS_MGP_PACKAGE_DIR)/vm/brun_run_ncsim.sh;
   timeout: 4000;
   test_command: test;
   run_mode: batch;
   auto_scan_args: $ENV(VMANAGER_HOME)/bin/shell.flt $ENV(VMANAGER_HOME)/bin/specman.flt $ENV(VMANAGER_CONFIG_HOME)/iris.flt;
   seed: random;
   sv_seed: 1;
   count: 5;
};
group special {
   test iris_reset_storage0 {
      top_files: <text>fme_iris_mgp/tests/iris_reset_storage0.e</text>;
   };
   test iris_reset_display0 {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display0.e</text>;
   };
   test iris_reset_display0_mem {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display0_mem.e</text>;
   };
   test iris_reset_display0_mem_fetcheco {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display0_mem_fetcheco.e</text>;
   };
   test iris_reset_display0_dump {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display0_dump.e</text>;
   };
   test iris_reset_display1 {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display1.e</text>;
   };
   test iris_reset_display1_mem {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display1_mem.e</text>;
   };
   test iris_reset_display1_dump {
      top_files: <text>fme_iris_mgp/tests/iris_reset_display1_dump.e</text>;
   };
   test iris_powerdown {
      top_files: <text>fme_iris_mgp/tests/iris_powerdown.e</text>;
   };
   test gammacor_inactive_test {
      top_files: <text>fme_iris_mgp/tests/gammacor_inactive_test.e</text>;
   };
   test mem_timeout {
      top_files: <text>fme_iris_mgp/tests/mem_timeout.e</text>;
   };
   test disp0_dynamic_max_width {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_max_width_test.e</text>;
   };
   test disp0_dynamic_max_width_scale {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_max_width_scale_test.e</text>;
   };
   test disp0_dynamic_max_height {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_max_height_test.e</text>;
   };
   test disp1_dynamic_max_width {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_max_width_test.e</text>;
   };
   test disp1_dynamic_max_width_scale {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_max_width_scale_test.e</text>;
   };
   test disp1_dynamic_max_height {
      top_files: <text>fme_iris_mgp/tests/disp1_dynamic_max_height_test.e</text>;
   };
   test disp0_dynamic_capture_max_width {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_capture_max_width_test.e</text>;
   };
   test disp0_dynamic_capture_max_height {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_capture_max_height_test.e</text>;
   };
   test disp0_dynamic_capture_mipi_error {
      top_files: <text>fme_iris_mgp/tests/disp0_dynamic_capture_mipi_error_test.e</text>;
   };
   test storage0_max_width {
      top_files: <text>fme_iris_mgp/tests/storage0_max_width_test.e</text>;
   };
   test storage0_max_height {
      top_files: <text>fme_iris_mgp/tests/storage0_max_height_test.e</text>;
   };
   test storeag0_min_cap_freq {
      top_files: <text>fme_iris_mgp/tests/storage0_min_cap_freq.e</text>;
   };
   test disp0_layerblend_secreplicateen {
      top_files: <text>fme_iris_mgp/tests/disp0_layerblend_secreplicateen.e</text>;
   };
   test dual_disp_side_by_side {
      top_files: <text>fme_iris_mgp/tests/dual_disp_side_by_side.e</text>;
   };
   test disp0_static_perf {
      top_files: <text>fme_iris_mgp/tests/disp0_static_perf.e</text>;
   };
   test bug3325_pixelbus_randomize_unselected {
      top_files: <text>fme_iris_mgp/tests/bug3325_pixelbus_randomize_unselected.e</text>;
   };
   test bug3325_pixelbus_randomize_unselected_auto {
      top_files: <text>fme_iris_mgp/tests/bug3325_pixelbus_randomize_unselected_auto.e</text>;
   };
   dut_name: <text>iris_mgp</text>;
   run_script: $ENV(FME_IRIS_MGP_PACKAGE_DIR)/vm/brun_run_ncsim.sh;
   timeout: 7200;
   test_command: test;
   run_mode: batch;
   auto_scan_args: $ENV(VMANAGER_HOME)/bin/shell.flt $ENV(VMANAGER_HOME)/bin/specman.flt $ENV(VMANAGER_CONFIG_HOME)/iris.flt;
   seed: random;
   sv_seed: 1;
   count: 1;
};
