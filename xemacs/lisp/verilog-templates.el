;; My menu item to insert Verilog body

;; Default project name
(defvar vlog-project (or (getenv "PROJECT") "vlab"))

;;;;
;; Copied from specman-mode to make this independent (changed fn name)
;;;;
(defun verilog-template-insert-year ()
  "Insert year from the system."
  (interactive)
  (let ((timpos)
        )
    (setq timpos (point))
    (shell-command  "date \"+@%Y\"" t)
    (search-forward "@")
    (delete-region timpos (point))
    (end-of-line))
  (delete-char 1))

(defun verilog-template-insert-date ()
  "Insert date from the system."
  (interactive)
  (let ((timpos)
        )
    (setq timpos (point))
    (shell-command  "date \"+@%b/%d/%Y/\"" t)
    (search-forward "@")
    (delete-region timpos (point))
    (end-of-line))
  (delete-char 1))
;;;;

;; Verilog module
(defun verilog-insert-file-body()
  (interactive)
  (let ((start (point)))
  (insert-file (concat verilog-template-dir "templates/verilog_body.tmpl"))
    (goto-char start)
    (search-forward "<author>") (replace-match "" t t)
    (insert (user-full-name) " <" user-mail-address ">")
    (search-forward "<copydate>") (replace-match "" t t)
    (verilog-template-insert-year)
    (goto-char start)
    (let (string)
      (setq string (read-string "project: " vlog-project))
      (make-variable-buffer-local 'vlog-project)
      (setq vlog-project string)
      (search-forward "<project>")
      (replace-match string t t))
    (let (string)
      (setq string (read-string "module-name: " string))
      (make-variable-buffer-local 'string)
      (search-forward "<name>")
      (replace-match string t t)
      (search-backward "<description>")
      (replace-match "" t t)))
)

;; SystemVerilog module
(defun verilog-insert-file-body2()
  (interactive)
  (let ((start (point)))
  (insert-file (concat verilog-template-dir "templates/system_verilog_body.tmpl"))
    (goto-char start)
    (search-forward "<author>") (replace-match "" t t)
    (insert (user-full-name) " <" user-mail-address ">")
	 (search-forward "<copydate>") (replace-match "" t t)
    (verilog-template-insert-year)
    (goto-char start)
    (let (string)
      (setq string (read-string "project: " vlog-project))
      (make-variable-buffer-local 'vlog-project)
      (setq vlog-project string)
      (search-forward "<project>")
      (replace-match string t t))
    (let (string)
      (setq string (read-string "module-name: " string))
      (make-variable-buffer-local 'string)
      (search-forward "<name>")
      (replace-match string t t)
      (search-backward "<description>")
      (replace-match "" t t))
))

;; SystemVerilog package
(defun verilog-insert-file-body3()
  (interactive)
  (let ((start (point)))
  (insert-file (concat verilog-template-dir "templates/system_verilog_pkg.tmpl"))
    (goto-char start)
    (search-forward "<author>") (replace-match "" t t)
    (insert (user-full-name) " <" user-mail-address ">")
    (search-forward "<copydate>") (replace-match "" t t)
    (verilog-template-insert-year)
    (goto-char start)
    (let (string)
      (setq string (read-string "project: " vlog-project))
      (make-variable-buffer-local 'vlog-project)
      (setq vlog-project string)
      (search-forward "<project>")
      (replace-match string t t))
    (let (string)
      (setq string (read-string "pkg-name: " string))
      (make-variable-buffer-local 'string)
      (search-forward "<name>")
      (replace-match string t t)
      (search-forward "<name>")
      (replace-match string t t)
      (search-backward "<description>")
      (replace-match "" t t))
))

;; SystemVerilog interface
(defun verilog-insert-file-body5()
  (interactive)
  (let ((start (point)))
  (insert-file (concat verilog-template-dir "templates/system_verilog_interface.tmpl"))
    (goto-char start)
    (search-forward "<author>") (replace-match "" t t)
    (insert (user-full-name) " <" user-mail-address ">")
	 (search-forward "<copydate>") (replace-match "" t t)
    (verilog-template-insert-year)
    (goto-char start)
    (let (string)
      (setq string (read-string "project: " vlog-project))
      (make-variable-buffer-local 'vlog-project)
      (setq vlog-project string)
      (search-forward "<project>")
      (replace-match string t t))
    (let (string)
      (setq string (read-string "interface-name: " string))
      (make-variable-buffer-local 'string)
      (search-forward "<name>")
      (replace-match string t t)
      (search-forward "<name>")
      (replace-match string t t)
      (search-backward "<description>")
      (replace-match "" t t))
))

;; SystemVerilog class
(defun verilog-insert-file-body4()
  (interactive)
  (let ((start (point)))
  (insert-file (concat verilog-template-dir "templates/system_verilog_class.tmpl"))
    (goto-char start)
    (search-forward "<author>") (replace-match "" t t)
    (insert (user-full-name) " <" user-mail-address ">")
	(search-forward "<copydate>") (replace-match "" t t)
    (verilog-template-insert-year)
    (goto-char start)
    (let (string)
      (setq string (read-string "project: " vlog-project))
      (make-variable-buffer-local 'vlog-project)
      (setq vlog-project string)
      (search-forward "<project>")
      (replace-match string t t))
    (let (string)
      (setq string (read-string "class-name: " string))
      (make-variable-buffer-local 'string)
      (search-forward "<name>")
      (replace-match (upcase string) t t)
      (search-forward "<name>")
      (replace-match (upcase string) t t)
      (search-forward "<name>")
      (replace-match string t t)
      (search-forward "<name>")
      (replace-match string t t)
      (search-forward "<name>")
      (replace-match string t t))
     (let (string)
      (setq string (read-string "base-class: " string))
      (make-variable-buffer-local 'string)
      (search-backward "<base-class>")
      (replace-match string t t)
      (search-backward "<description>")
      (replace-match "" t t))
))

(defun verilog_mode_add_insert_body()
  (interactive)
  (add-menu-item '("Verilog" "Insert Template") "Verilog-1995 Template" 'verilog-insert-file-body t "Line up declarations around point")
  (add-menu-item '("Verilog" "Insert Template") "SystemVerilog Module Template" 'verilog-insert-file-body2 t "Line up declarations around point")
  (add-menu-item '("Verilog" "Insert Template") "SystemVerilog Package Template" 'verilog-insert-file-body3 t "Line up declarations around point")
  (add-menu-item '("Verilog" "Insert Template") "SystemVerilog Class Template" 'verilog-insert-file-body4 t "Line up declarations around point")
  (add-menu-item '("Verilog" "Insert Template") "SystemVerilog Interface" 'verilog-insert-file-body5 t "Line up declarations around point")
)
(add-hook 'verilog-mode-hook 'verilog_mode_add_insert_body)

;; end "My menu..."
